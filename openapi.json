{
    "openapi": "3.0.3",
    "info": {
        "title": "AiFlow API",
        "description": "AiFlow is an AI-powered search engine contact search and CRM.",
        "version": "0.0.1",
        "contact": {
            "name": "AiFlow Support",
            "email": "contact@aiflow.solutions",
            "url": "https://www.aiflow.solutions/"
        }
    },
    "servers": [
        {
            "url": "https://www.app.aiflow.solutions",
            "description": "Production API"
        }
    ],
    "paths": {
        "/search/contacts": {
            "post": {
                "operationId": "searchContacts",
                "x-speakeasy-name-override": "search",
                "x-speakeasy-usage-example": true,
                "summary": "Search contacts",
                "description": "Search contacts for the authenticated organization.",
                "tags": [
                    "Contacts"
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "searchTerm": {
                                        "type": "string",
                                        "description": "The search term to use for the AI-powered query of contacts. For example, 'Hubspot'. You can search for industry keywords, job titles, or company names.",
                                        "example": "Hubspot"
                                    },
                                    "numberOfResults": {
                                        "type": "number",
                                        "nullable": true,
                                        "default": 10,
                                        "description": "The number of contacts to return. Defaults to 10.",
                                        "example": 10
                                    },
                                    "orgId": {
                                        "type": "string",
                                        "description": "The organization ID to search within",
                                        "example": "org_B5b5d6a6d7a5a1a1"
                                    }
                                },
                                "required": [
                                    "searchTerm",
                                    "orgId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The queried contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "description": "Whether the request was successful."
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "companyId": {
                                                        "type": "string",
                                                        "description": "Unique identifier for the company",
                                                        "example": "64882369-561d-5bda-cefe-dde056ed2e6g"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "Job title",
                                                        "example": "Senior Product Manager"
                                                    },
                                                    "distance": {
                                                        "type": "number",
                                                        "nullable": true,
                                                        "description": "Percentage match between the experience and the search query. Higher is better.",
                                                        "example": 0.925
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "description": "Unique identifier for the contact experience",
                                                        "example": "6459d956-5e85-5dc1-a6e7-28f13bd44e3d"
                                                    },
                                                    "titleIsCurrentMaster": {
                                                        "type": "boolean",
                                                        "nullable": true,
                                                        "description": "Indicates if this is the current master title",
                                                        "example": true
                                                    },
                                                    "titleTypeMaster": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "Master type of the title",
                                                        "example": "Manager"
                                                    },
                                                    "startsAt": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "Start date of the experience",
                                                        "example": "2021-03-15T00:00:00.000Z"
                                                    },
                                                    "endsAt": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "End date of the experience",
                                                        "example": "2023-12-31T00:00:00.000Z"
                                                    },
                                                    "likelihoodOfDeparture": {
                                                        "type": "number",
                                                        "nullable": true,
                                                        "description": "Likelihood of the contact leaving the position. May not be present",
                                                        "example": 0.15
                                                    },
                                                    "ipoExperience": {
                                                        "type": "boolean",
                                                        "nullable": true,
                                                        "description": "Indicates if this experience involves an IPO",
                                                        "example": false
                                                    },
                                                    "source": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Matched query on the basis of company vector or job title vector",
                                                        "example": [
                                                            "CompanyVector",
                                                            "JobTitleVector"
                                                        ]
                                                    },
                                                    "contactId": {
                                                        "type": "string",
                                                        "description": "Unique identifier for the contact",
                                                        "example": "8765432a-70e5-480e-cb32-7a03cd451e44"
                                                    },
                                                    "Contact": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "description": "Unique identifier for the contact",
                                                                "example": "8765432a-70e5-480e-cb32-7a03cd451e44"
                                                            },
                                                            "firstName": {
                                                                "type": "string",
                                                                "description": "First name of the contact",
                                                                "example": "Sarah"
                                                            },
                                                            "lastName": {
                                                                "type": "string",
                                                                "description": "Last name of the contact",
                                                                "example": "Johnson"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "Job title of the contact",
                                                                "example": "Chief Technology Officer"
                                                            },
                                                            "biography": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "Biography of the contact",
                                                                "example": "Experienced tech leader with a passion for innovation Etc etc etc."
                                                            },
                                                            "salesforceId": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "Salesforce ID of the contact",
                                                                "example": "0048X00003egXStRBM"
                                                            },
                                                            "company": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "Company name associated with the contact",
                                                                "example": "TechInnovate Solutions"
                                                            },
                                                        
                                                      
                                                            "contactGender": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "Gender of the contact",
                                                                "example": "Female"
                                                            },
                                                            "profilePicUrl": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "URL of the contact's profile picture",
                                                                "example": "https://example.com/profiles/sarah_johnson.jpg"
                                                            },
                                                            "nblProfilePicUrl": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "URL of the contact's Nubela profile picture",
                                                                "example": "images/f6ddb53e-0c99-5f16-9864-e24361274b5e.jpg"
                                                            },
                                                            "equilarPhoto": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "URL of the contact's Equilar photo",
                                                                "example": "https://example.com/equilar/sarah_johnson.png"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "description": "Type of the contact",
                                                                "example": "Limited Partner"
                                                            },
                                                            "equilarAge": {
                                                                "type": "number",
                                                                "nullable": true,
                                                                "description": "Age of the contact according to Equilar",
                                                                "example": 42
                                                            },
                                                            "linkedinUrl": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "LinkedIn URL of the contact",
                                                                "example": "https://www.linkedin.com/in/sarah-johnson-cto/"
                                                            },
                                                            "LecInvestor": {
                                                                "type": "object",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "homeCity": {
                                                                        "type": "string",
                                                                        "nullable": true,
                                                                        "description": "Home city of the contact",
                                                                        "example": "San Francisco"
                                                                    },
                                                                    "homeStateProvince": {
                                                                        "type": "string",
                                                                        "nullable": true,
                                                                        "description": "Home state/province of the contact",
                                                                        "example": "CA"
                                                                    },
                                                                    "homeCountry": {
                                                                        "type": "string",
                                                                        "nullable": true,
                                                                        "description": "Home country of the contact",
                                                                        "example": "United States"
                                                                    },
                                                                    "workCity": {
                                                                        "type": "string",
                                                                        "nullable": true,
                                                                        "description": "Work city of the contact",
                                                                        "example": "Palo Alto"
                                                                    },
                                                                    "workStateProvince": {
                                                                        "type": "string",
                                                                        "nullable": true,
                                                                        "description": "Work state/province of the contact",
                                                                        "example": "CA"
                                                                    },
                                                                    "workCountry": {
                                                                        "type": "string",
                                                                        "nullable": true,
                                                                        "description": "Work country of the contact",
                                                                        "example": "United States"
                                                                    },
                                                                    "altCity": {
                                                                        "type": "string",
                                                                        "nullable": true,
                                                                        "description": "Alternative city of the contact",
                                                                        "example": "New York"
                                                                    },
                                                                    "altStateProvince": {
                                                                        "type": "string",
                                                                        "nullable": true,
                                                                        "description": "Alternative state/province of the contact",
                                                                        "example": "NY"
                                                                    },
                                                                    "altCountry": {
                                                                        "type": "string",
                                                                        "nullable": true,
                                                                        "description": "Alternative country of the contact",
                                                                        "example": "United States"
                                                                    },
                                                                    "id": {
                                                                        "type": "string",
                                                                        "description": "Unique identifier for the contact",
                                                                        "example": "35e391e5-8927-5f59-c16e-c46392d51956"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "homeCity",
                                                                    "homeStateProvince",
                                                                    "homeCountry",
                                                                    "workCity",
                                                                    "workStateProvince",
                                                                    "workCountry",
                                                                    "altCity",
                                                                    "altStateProvince",
                                                                    "altCountry",
                                                                    "id"
                                                                ],
                                                                "description": "LEC Investor information"
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "firstName",
                                                            "lastName",
                                                            "workEmailPrimary",
                                                            "contactGender",
                                                            "profilePicUrl",
                                                            "nblProfilePicUrl",
                                                            "type",
                                                            "linkedinUrl",
                                                            "LecInvestor"
                                                        ],
                                                        "description": "Detailed contact information"
                                                    },
                                                    "company": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "description": "Name of the company",
                                                                "example": "InnoTech Solutions"
                                                            },
                                                            "id": {
                                                                "type": "string",
                                                                "description": "Unique identifier for the company",
                                                                "example": "64882369-561d-5bda-cefe-dde056ed2e6g"
                                                            },
                                                            "logoUrl": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "URL of the company logo",
                                                                "example": "https://example.com/logos/innotech.png"
                                                            },
                                                            "competitors": {
                                                                "type": "array",
                                                                "nullable": true,
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "description": "List of competitor companies",
                                                                "example": [
                                                                    "TechCorp",
                                                                    "InnovateX",
                                                                    "FutureSoft"
                                                                ]
                                                            },
                                                            "shortDescription": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "Short description of the company",
                                                                "example": "Leading provider of AI-driven business solutions"
                                                            },
                                                            "pdlCompanyType": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "Company type according to People Data Labs",
                                                                "example": "Public"
                                                            },
                                                            "pdlSize": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "Company size according to People Data Labs",
                                                                "example": "1001-5000"
                                                            },
                                                            "companyTypeMaster": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "Master company type",
                                                                "example": "Technology"
                                                            },
                                                            "nblCompanyType": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "Company type according to Nubela",
                                                                "example": "PUBLICLY_TRADED"
                                                            },
                                                            "nblProfilePicUrl": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "URL of the company's Nubela profile picture",
                                                                "example": "images/b45f1d92-9669-4a7b-ab87-8e5c32d63c7d.jpg"
                                                            },
                                                            "Fortune1000": {
                                                                "type": "object",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "rank": {
                                                                        "type": "number",
                                                                        "description": "Fortune 1000 rank of the company",
                                                                        "example": 456
                                                                    },
                                                                    "revenueMillions": {
                                                                        "type": "number",
                                                                        "description": "Revenue in millions",
                                                                        "example": 3500
                                                                    }
                                                                },
                                                                "required": [
                                                                    "rank",
                                                                    "revenueMillions"
                                                                ],
                                                                "description": "Fortune 1000 information"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "logoUrl",
                                                            "pdlCompanyType",
                                                            "pdlSize",
                                                            "nblProfilePicUrl"
                                                        ],
                                                        "description": "Detailed company information"
                                                    },
                                                    "_count": {
                                                        "type": "object",
                                                        "properties": {
                                                            "ContactExperienceAcquisition": {
                                                                "type": "number",
                                                                "description": "Count of M&A acquisitions that the contact engaged in during this experience",
                                                                "example": 2
                                                            }
                                                        },
                                                        "required": [
                                                            "ContactExperienceAcquisition"
                                                        ],
                                                        "description": "Count of related entities"
                                                    }
                                                },
                                                "required": [
                                                    "companyId",
                                                    "title",
                                                    "id",
                                                    "titleIsCurrentMaster",
                                                    "titleTypeMaster",
                                                    "startsAt",
                                                    "endsAt",
                                                    "likelihoodOfDeparture",
                                                    "ipoExperience",
                                                    "contactId",
                                                    "Contact",
                                                    "company"
                                                ]
                                            },
                                            "description": "The contacts that matched the search query."
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "nullable": true,
                                            "properties": {
                                                "currentPageSize": {
                                                    "type": "number"
                                                },
                                                "totalRows": {
                                                    "type": "number"
                                                },
                                                "currentPage": {
                                                    "type": "number"
                                                },
                                                "totalPages": {
                                                    "type": "number",
                                                    "nullable": true
                                                }
                                            },
                                            "required": [
                                                "currentPageSize",
                                                "totalRows",
                                                "currentPage",
                                                "totalPages"
                                            ],
                                            "description": "Pagination information for the search results."
                                        },
                                        "lastRow": {
                                            "type": "number",
                                            "description": "The last row of the search results."
                                        },
                                        "queryDuration": {
                                            "type": "number",
                                            "nullable": true,
                                            "description": "The duration of the search query in seconds."
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "rows",
                                        "pagination",
                                        "lastRow",
                                        "queryDuration"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "409": {
                        "$ref": "#/components/responses/409"
                    },
                    "410": {
                        "$ref": "#/components/responses/410"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "429": {
                        "$ref": "#/components/responses/429"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/search/contact": {
            "post": {
                "operationId": "getUniqueContact",
                "x-speakeasy-name-override": "search",
                "x-speakeasy-usage-example": true,
                "summary": "Get a contact",
                "description": "Get a contact for the authenticated organization.",
                "tags": [
                    "Contacts"
                ],
                "security": [
                    {
                        "token": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "contactId": {
                                        "type": "string",
                                        "description": "Unique identifier of the contact to retrieve",
                                        "example": "c1fdf4d8-384b-4b1c-a504-e7e2ea0e7f22"
                                    },
                                    "orgId": {
                                        "type": "string",
                                        "description": "Identifier of the organization to search within",
                                        "example": "org_A5b5d6a6d7a5a2a2"
                                    }
                                },
                                "required": [
                                    "contactId",
                                    "orgId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The queried contact",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "firstName": {
                                            "type": "string",
                                            "description": "First name of the contact",
                                            "example": "John"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "description": "Last name of the contact",
                                            "example": "Doe"
                                        },
                                        "profilePicUrl": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "URL of the contact's profile picture",
                                            "example": "https://example.com/profile-pic.jpg"
                                        },
                                        "linkedinUrl": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "LinkedIn profile URL of the contact",
                                            "example": "https://www.linkedin.com/in/johndoe"
                                        },
                                        "crunchbaseUrl": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "Crunchbase profile URL of the contact",
                                            "example": "https://www.crunchbase.com/person/john-doe"
                                        },
                                        "title": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "Current job title of the contact",
                                            "example": "Chief Technology Officer"
                                        },
                                        "company": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "Current company of the contact",
                                            "example": "Tech Innovations Inc."
                                        },
                                        "languages": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "Languages spoken by the contact",
                                            "example": [
                                                "English",
                                                "Spanish"
                                            ]
                                        },
                                        "biography": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "Biography of the contact",
                                            "example": "John is a seasoned technology leader with over 15 years of experience..."
                                        },
                                        "experiences": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "Unique identifier for the experience",
                                                        "example": "exp_123456789"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "Description of the experience",
                                                        "example": "Led a team of 10 developers in creating a new product."
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "Job title",
                                                        "example": "Senior Software Engineer"
                                                    },
                                                    "startsAt": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "Start date of the experience",
                                                        "example": "2020-01-15T00:00:00.000Z"
                                                    },
                                                    "endsAt": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "End date of the experience",
                                                        "example": "2023-06-30T00:00:00.000Z"
                                                    },
                                                    "location": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "Location of the experience",
                                                        "example": "San Francisco, CA"
                                                    },
                                                    "titleIsCurrentMaster": {
                                                        "type": "boolean",
                                                        "nullable": true,
                                                        "description": "Indicates if this is the current primary title",
                                                        "example": true
                                                    },
                                                    "company": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "description": "Name of the company or school",
                                                                "example": "Acme Corporation or Harvard University"
                                                            },
                                                            "linkedinProfileUrl": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "LinkedIn profile URL of the company or school",
                                                                "example": "https://www.linkedin.com/company/acme-corp"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "linkedinProfileUrl"
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "description",
                                                    "title",
                                                    "startsAt",
                                                    "endsAt",
                                                    "location",
                                                    "titleIsCurrentMaster",
                                                    "company"
                                                ]
                                            },
                                            "description": "Professional experiences of the contact"
                                        },
                                        "education": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "startsAt": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "Start date of education",
                                                        "example": "2016-09-01T00:00:00.000Z"
                                                    },
                                                    "endsAt": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "End date of education",
                                                        "example": "2020-05-31T00:00:00.000Z"
                                                    },
                                                    "fieldOfStudy": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "Field of study",
                                                        "example": "Computer Science"
                                                    },
                                                    "degreeName": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "description": "Name of the degree obtained",
                                                        "example": "Bachelor of Science"
                                                    },
                                                    "company": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "description": "Name of the company or school",
                                                                "example": "Acme Corporation or Harvard University"
                                                            },
                                                            "linkedinProfileUrl": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "description": "LinkedIn profile URL of the company or school",
                                                                "example": "https://www.linkedin.com/company/acme-corp"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "linkedinProfileUrl"
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "startsAt",
                                                    "endsAt",
                                                    "fieldOfStudy",
                                                    "degreeName",
                                                    "company"
                                                ]
                                            },
                                            "description": "Educational background of the contact"
                                        }
                                    },
                                    "required": [
                                        "firstName",
                                        "lastName",
                                        "profilePicUrl",
                                        "linkedinUrl",
                                        "crunchbaseUrl",
                                        "title",
                                        "company",
                                        "languages",
                                        "biography",
                                        "experiences",
                                        "education"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "409": {
                        "$ref": "#/components/responses/409"
                    },
                    "410": {
                        "$ref": "#/components/responses/410"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "429": {
                        "$ref": "#/components/responses/429"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "token": {
                "type": "http",
                "description": "Default authentication mechanism",
                "scheme": "bearer",
                "x-speakeasy-example": "AIFLOW_API_KEY"
            }
        },
        "responses": {
            "400": {
                "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
                "content": {
                    "application/json": {
                        "schema": {
                            "x-speakeasy-name-override": "BadRequest",
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "enum": [
                                                "bad_request"
                                            ],
                                            "description": "A short code indicating the error code returned.",
                                            "example": "bad_request"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A human readable explanation of what went wrong.",
                                            "example": "The requested resource was not found."
                                        },
                                        "doc_url": {
                                            "type": "string",
                                            "description": "A link to our documentation with more details about this error code",
                                            "example": "https://aiflow.solutions/docs/api-reference/errors#bad-request"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    }
                }
            },
            "401": {
                "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "x-speakeasy-name-override": "Unauthorized",
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "enum": [
                                                "unauthorized"
                                            ],
                                            "description": "A short code indicating the error code returned.",
                                            "example": "unauthorized"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A human readable explanation of what went wrong.",
                                            "example": "The requested resource was not found."
                                        },
                                        "doc_url": {
                                            "type": "string",
                                            "description": "A link to our documentation with more details about this error code",
                                            "example": "https://aiflow.solutions/docs/api-reference/errors#unauthorized"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    }
                }
            },
            "403": {
                "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
                "content": {
                    "application/json": {
                        "schema": {
                            "x-speakeasy-name-override": "Forbidden",
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "enum": [
                                                "forbidden"
                                            ],
                                            "description": "A short code indicating the error code returned.",
                                            "example": "forbidden"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A human readable explanation of what went wrong.",
                                            "example": "The requested resource was not found."
                                        },
                                        "doc_url": {
                                            "type": "string",
                                            "description": "A link to our documentation with more details about this error code",
                                            "example": "https://aiflow.solutions/docs/api-reference/errors#forbidden"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    }
                }
            },
            "404": {
                "description": "The server cannot find the requested resource.",
                "content": {
                    "application/json": {
                        "schema": {
                            "x-speakeasy-name-override": "NotFound",
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "enum": [
                                                "not_found"
                                            ],
                                            "description": "A short code indicating the error code returned.",
                                            "example": "not_found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A human readable explanation of what went wrong.",
                                            "example": "The requested resource was not found."
                                        },
                                        "doc_url": {
                                            "type": "string",
                                            "description": "A link to our documentation with more details about this error code",
                                            "example": "https://aiflow.solutions/docs/api-reference/errors#not-found"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    }
                }
            },
            "409": {
                "description": "This response is sent when a request conflicts with the current state of the server.",
                "content": {
                    "application/json": {
                        "schema": {
                            "x-speakeasy-name-override": "Conflict",
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "enum": [
                                                "conflict"
                                            ],
                                            "description": "A short code indicating the error code returned.",
                                            "example": "conflict"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A human readable explanation of what went wrong.",
                                            "example": "The requested resource was not found."
                                        },
                                        "doc_url": {
                                            "type": "string",
                                            "description": "A link to our documentation with more details about this error code",
                                            "example": "https://aiflow.solutions/docs/api-reference/errors#conflict"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    }
                }
            },
            "410": {
                "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
                "content": {
                    "application/json": {
                        "schema": {
                            "x-speakeasy-name-override": "InviteExpired",
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "enum": [
                                                "invite_expired"
                                            ],
                                            "description": "A short code indicating the error code returned.",
                                            "example": "invite_expired"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A human readable explanation of what went wrong.",
                                            "example": "The requested resource was not found."
                                        },
                                        "doc_url": {
                                            "type": "string",
                                            "description": "A link to our documentation with more details about this error code",
                                            "example": "https://aiflow.solutions/docs/api-reference/errors#invite-expired"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    }
                }
            },
            "422": {
                "description": "The request was well-formed but was unable to be followed due to semantic errors.",
                "content": {
                    "application/json": {
                        "schema": {
                            "x-speakeasy-name-override": "UnprocessableEntity",
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "enum": [
                                                "unprocessable_entity"
                                            ],
                                            "description": "A short code indicating the error code returned.",
                                            "example": "unprocessable_entity"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A human readable explanation of what went wrong.",
                                            "example": "The requested resource was not found."
                                        },
                                        "doc_url": {
                                            "type": "string",
                                            "description": "A link to our documentation with more details about this error code",
                                            "example": "https://aiflow.solutions/docs/api-reference/errors#unprocessable-entity"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    }
                }
            },
            "429": {
                "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
                "content": {
                    "application/json": {
                        "schema": {
                            "x-speakeasy-name-override": "RateLimitExceeded",
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "enum": [
                                                "rate_limit_exceeded"
                                            ],
                                            "description": "A short code indicating the error code returned.",
                                            "example": "rate_limit_exceeded"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A human readable explanation of what went wrong.",
                                            "example": "The requested resource was not found."
                                        },
                                        "doc_url": {
                                            "type": "string",
                                            "description": "A link to our documentation with more details about this error code",
                                            "example": "https://aiflow.solutions/docs/api-reference/errors#rate-limit_exceeded"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    }
                }
            },
            "500": {
                "description": "The server has encountered a situation it does not know how to handle.",
                "content": {
                    "application/json": {
                        "schema": {
                            "x-speakeasy-name-override": "InternalServerError",
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "enum": [
                                                "internal_server_error"
                                            ],
                                            "description": "A short code indicating the error code returned.",
                                            "example": "internal_server_error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A human readable explanation of what went wrong.",
                                            "example": "The requested resource was not found."
                                        },
                                        "doc_url": {
                                            "type": "string",
                                            "description": "A link to our documentation with more details about this error code",
                                            "example": "https://aiflow.solutions/docs/api-reference/errors#internal-server_error"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ]
                                }
                            },
                            "required": [
                                "error"
                            ]
                        }
                    }
                }
            }
        }
    }
}